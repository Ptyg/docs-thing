/* tslint:disable */
/* eslint-disable */
/**
 * CRM System API
 * API for managing Clients and Invoices
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InvoiceRequest
 */
export interface InvoiceRequest {
    /**
     * 
     * @type {number}
     * @memberof InvoiceRequest
     */
    amount: number;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceRequest
     */
    date: Date;
    /**
     * 
     * @type {string}
     * @memberof InvoiceRequest
     */
    status?: InvoiceRequestStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof InvoiceRequest
     */
    clientId: number;
}


/**
 * @export
 */
export const InvoiceRequestStatusEnum = {
    Pending: 'pending',
    Paid: 'paid'
} as const;
export type InvoiceRequestStatusEnum = typeof InvoiceRequestStatusEnum[keyof typeof InvoiceRequestStatusEnum];


/**
 * Check if a given object implements the InvoiceRequest interface.
 */
export function instanceOfInvoiceRequest(value: object): value is InvoiceRequest {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    return true;
}

export function InvoiceRequestFromJSON(json: any): InvoiceRequest {
    return InvoiceRequestFromJSONTyped(json, false);
}

export function InvoiceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'date': (new Date(json['date'])),
        'status': json['status'] == null ? undefined : json['status'],
        'clientId': json['client_id'],
    };
}

export function InvoiceRequestToJSON(json: any): InvoiceRequest {
    return InvoiceRequestToJSONTyped(json, false);
}

export function InvoiceRequestToJSONTyped(value?: InvoiceRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'date': ((value['date']).toISOString().substring(0,10)),
        'status': value['status'],
        'client_id': value['clientId'],
    };
}

